{"name":"JSON5","body":"JSON isn't the friendliest to write and maintain by hand. Keys need to be\r\nquoted; objects and arrays can't have trailing commas; comments aren't\r\nsupported — even though none of these are the case with regular JavaScript\r\ntoday.\r\n\r\nRestricting JSON to such a strict subset of \"JavaScript object notation\" made\r\nsense for making it a great data-exchange format, but JSON's usage has\r\nexpanded [beyond][ex1] [machine-to-machine][ex2] [communication][ex3].\r\n\r\n[ex1]: http://plovr.com/docs.html\r\n[ex2]: http://npmjs.org/doc/json.html\r\n[ex3]: http://code.google.com/p/fuzztester/wiki/JSONFileFormat\r\n\r\n**JSON5 is a proposed extension to JSON** that brings ES5 enhancements to its\r\nsyntax. It remains a **strict subset of JavaScript**, adds **no new data\r\ntypes**, and is a **strict superset of existing JSON**.\r\n\r\nJSON5 is not an official successor to JSON, and existing JSON parsers may not\r\nunderstand these new features. It's thus recommended that files use a new\r\nextension like `.json5` to be explicit. *[TODO: New MIME type too?]*\r\n\r\nThis module provides a JavaScript implementation that works on all modern JS\r\nengines (even IE6). Its parser is based directly off of Douglas Crockford's\r\neval-free [json_parse.js][], making it both secure and robust. Give it a try!\r\n\r\n## Features\r\n\r\nThese are the new features of JSON5's syntax. **All of these are optional**,\r\nand **all of these are part of ES5 JavaScript**.\r\n\r\n### Objects\r\n\r\n- Object keys can be unquoted if they're valid [identifiers](\r\n  https://developer.mozilla.org/en/Core_JavaScript_1.5_Guide/Core_Language_Features#Variables). Yes, even reserved keywords are valid unquoted keys in ES5 [[§11.1.5](http://es5.github.com/#x11.1.5), [§7.6](http://es5.github.com/#x7.6)].\r\n  *[TODO: Unicode characters and escape sequences aren't yet supported in this implementation.]*\r\n\r\n- Objects can have trailing commas.\r\n\r\n### Arrays\r\n\r\n- Arrays can have trailing commas.\r\n\r\n### Strings\r\n\r\n- Strings can be single-quoted.\r\n\r\n- Strings can be split across multiple lines; just prefix each newline with a\r\n  backslash. [ES5 [§7.8.4](http://es5.github.com/#x7.8.4)]\r\n\r\n### Numbers\r\n\r\n- Numbers can be hexadecimal (base 16). (Note that signed hexadecimals are not\r\n  allowed by ES5, nor are hexadecimal floats.)\r\n\r\n- Numbers can begin or end with a (leading or trailing) decimal point.\r\n\r\n- Numbers can include `Infinity` and `-Infinity`.\r\n\r\n- Numbers can begin with an explicit plus (`+`) sign.\r\n\r\n### Comments\r\n\r\n- Both inline (single-line) and block (multi-line) comments are allowed.\r\n\r\n## Example\r\n\r\n```js\r\n{\r\n    foo: 'bar',\r\n    while: true,\r\n\r\n    this: 'is a \\\r\nmulti-line string',\r\n\r\n    // this is an inline comment\r\n    here: 'is another', // inline comment\r\n\r\n    /* this is a block comment\r\n       that continues on another line */\r\n\r\n    hex: 0xDEADbeef,\r\n    half: .5,\r\n    delta: +10,\r\n    to: Infinity,   // and beyond!\r\n\r\n    finally: 'a trailing comma',\r\n    oh: [\r\n        \"we shouldn't forget\",\r\n        'arrays can have',\r\n        'trailing commas too',\r\n    ],\r\n}\r\n```\r\n\r\n## Installation\r\n\r\nVia npm on Node:\r\n\r\n```\r\nnpm install json5\r\n```\r\n\r\n```js\r\nvar JSON5 = require('json5');\r\n```\r\n\r\nOr in the browser (adds the `JSON5` object to the global namespace):\r\n\r\n```html\r\n<script src=\"json5.js\"></script>\r\n```\r\n\r\n## Usage\r\n\r\n```js\r\nvar obj = JSON5.parse('{unquoted:\"key\",trailing:\"comma\",}');\r\nvar str = JSON5.stringify(obj);\r\n```\r\n\r\n`JSON5.stringify()` is currently aliased to the native `JSON.stringify()` in\r\norder for the output to be fully compatible with all JSON parsers today.\r\n\r\nIf you're running Node, you can also register a JSON5 `require()` hook to let\r\nyou `require()` `.json5` files just like you can `.json` files:\r\n\r\n```js\r\nrequire('json5/lib/require');\r\nrequire('./path/to/foo');   // tries foo.json5 after foo.js, foo.json, etc.\r\nrequire('./path/to/bar.json5');\r\n```\r\n\r\nThis module also provides a `json5` executable (requires Node) for converting\r\nJSON5 files to sibling JSON files:\r\n\r\n```\r\n$ json5 -c path/to/foo.json5    # generates path/to/foo.json\r\n```\r\n\r\n## Development\r\n\r\n```\r\ngit clone git://github.com/aseemk/json5.git\r\ncd json5\r\nnpm install\r\nnpm test\r\n```\r\n\r\nAs the `package.json5` file states, be sure to run `npm run build` on changes\r\nto `package.json5`, since npm requires `package.json`.\r\n\r\nFeel free to [file issues](https://github.com/aseemk/json5/issues) and submit\r\n[pull requests](https://github.com/aseemk/json5/pulls) — contributions are\r\nwelcome. If you do submit a pull request, please be sure to add or update\r\ncorresponding test cases, and ensure that `npm test` continues to pass.\r\n\r\n## License\r\n\r\nMIT License. © 2012 Aseem Kishore, and [others](\r\nhttps://github.com/aseemk/json5/contributors).\r\n\r\n## Credits\r\n\r\n[Michael Bolin](http://bolinfest.com/) independently arrived at and published\r\nsome of these same ideas with awesome explanations and detail.\r\nRecommended reading:\r\n[Suggested Improvements to JSON](http://bolinfest.com/essays/json.html)\r\n\r\n[Douglas Crockford](http://www.crockford.com/) of course designed and built\r\nJSON, but his state machine diagrams on the [JSON website](http://json.org/),\r\nas cheesy as it may sound, gave me motivation and confidence that building a\r\nnew parser to implement these ideas this was within my reach!\r\nThis code is also modeled directly off of Doug's open-source [json_parse.js][]\r\nparser. I'm super grateful for that clean and well-documented code.\r\n\r\n[json_parse.js]: https://github.com/douglascrockford/JSON-js/blob/master/json_parse.js\r\n\r\n[Max Nanasy](https://github.com/MaxNanasy) has been an early and prolific\r\nsupporter, contributing multiple patches and ideas. Thanks Max!\r\n","tagline":"JSON for the ES5 era.","note":"Don't delete this file! It's used internally to help with page regeneration.","google":"UA-32213209-1"}